#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE      &kp N1  &kp N2            &kp N3        &kp N4        &kp N5  &tog 2                                                                                &mo 3                           &kp N6  &kp N7     &kp N8     &kp N9            &kp N0             &kp BACKSPACE
&kp GRAVE       &kp Q   &kp W             &kp E         &kp R         &kp T   &kp LS(LA(LC(LG(F))))                                                                 &kp LS(LA(LC(LG(UP_ARROW))))    &kp Y   &kp U      &kp I      &kp O             &kp P              &kp BSLH
&kp TAB         &kp A   &kp S             &kp D         &kp F         &kp G   &kp LS(LA(LC(LG(RIGHT))))  &kp LC(TAB)  &kp HOME        &kp PAGE_UP    &kp LG(GRAVE)  &kp LS(LA(LC(LG(DOWN_ARROW))))  &kp H   &kp J      &kp K      &kp L             &kp SEMI           &kp SQT
&kp LSHFT       &kp Z   &kp X             &kp C         &kp V         &kp B                                           &kp END         &kp PAGE_DOWN                                                 &kp N   &kp M      &kp COMMA  &kp DOT           &kp FSLH           &kp RSHFT
&kp LEFT_SHIFT  &none   &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_GUI          &kp LEFT_GUI               &kp SPACE    &kp DELETE      &kp BACKSPACE  &kp ENTER      &mo 1                                   &kp MINUS  &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp RIGHT_SHIFT
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2     &kp F3     &kp F4     &kp F5     &kp F6                 &tog 2                                             &mo 3             &kp F7                 &kp F8    &kp F9        &kp F10                           &kp F11                            &kp F12
&trans  &trans     &trans     &trans     &trans     &trans                 &kp LG(LC(F))                                      &kp LS(LG(LEFT))  &kp LG(LEFT)           &none     &kp UP_ARROW  &none                             &kp RG(RIGHT)                      &kp LS(LG(RIGHT))
&trans  &trans     &trans     &trans     &trans     &trans                 &kp LG(TAB)    &trans  &trans      &trans  &trans  &kp LA(LS(LEFT))  &kp LA(LEFT)           &kp LEFT  &kp DOWN      &kp RIGHT                         &kp LA(RIGHT)                      &kp RA(RS(RIGHT))
&trans  &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp LS(LA(LC(LG(B))))                         &trans      &trans                            &kp RS(RA(RC(RG(N))))  &none     &trans        &none                             &none                              &trans
&trans  &trans     &trans     &trans     &trans                            &trans         &trans  &trans      &trans  &trans  &trans                                   &none     &none         &kp LS(LA(LC(LG(LEFT_BRACKET))))  &kp LS(LA(LC(LG(RIGHT_BRACKET))))  &trans
            >;
        };

        keypad {
            bindings = <
&kp ESCAPE  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &trans                                      &mo 3   &none  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp ESCAPE  &kp Q   &kp W   &kp E   &kp R   &kp T   &none                                       &none   &none  &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp TAB     &kp A   &kp S   &kp D   &kp F   &kp G   &none   &trans  &trans      &trans  &trans  &none   &none  &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT   &kp Z   &kp X   &kp C   &kp V   &kp B                   &trans      &trans                  &none  &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &none
&none       &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans         &kp KP_N0   &kp KP_N0     &kp KP_DOT     &none            &none
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
